group = 'one.chest'
version = '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'groovy'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
        classpath 'io.ratpack:ratpack-gradle:1.4.6'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath 'se.transmode.gradle:gradle-docker:1.2'

    }
}

apply plugin: 'io.ratpack.ratpack-groovy'

apply from: 'coverage.gradle'
apply from: 'integTest.gradle'
apply from: 'shadow.gradle'
apply from: 'docker.gradle'
apply from: 'license.gradle'

repositories {
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'

    compile 'one.chest.ratpack:ratpack-form-parser:0.0.1'

    compile 'org.glassfish.web:el-impl:2.2'
    compile 'org.hibernate:hibernate-validator-cdi:5.4.1.Final'

    compile 'ch.qos.logback:logback-classic:1.2.3'

    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    filesMatching('**/application.properties') {
        filter(ReplaceTokens, tokens: [name: project.name, version: project.version])
    }
}